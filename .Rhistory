a_ewma_portfolios %>%
pivot_longer(
cols      = c(Cume_a, Cume_d),
names_to  = "Strategy",
values_to = "CumulativeReturn"
) %>%
ggplot(aes(Date, CumulativeReturn, color = Strategy)) +
geom_line() +
scale_color_viridis_d("Strategy",
labels = c("alpha-based", "alpha-Delta"),
option = "D"
) +
theme_minimal() +
theme(legend.position = "bottom", legend.title = element_blank()) +
labs(
x     = "Date",
y     = "Cumulative Return"
) +
geom_vline(xintercept = as.Date("2008-11-15"),
linetype   = "dotted", color = "red") +
geom_vline(xintercept = as.Date("2020-03-11"),
linetype   = "dotted", color = "red") +
annotate("text", x = as.Date("2008-11-15"), y = -.1, label = "Great Recession",
angle=90, vjust=-.5, size=4, alpha=0.6) +
annotate("text", x = as.Date("2020-03-11"), y = -.1, label = "Pandemic Announced",
angle=90, vjust=-.5, size=4, alpha=0.6)
a_sma_portfolios %>%
pivot_longer(
cols      = c(Cume_a, Cume_d),
names_to  = "Strategy",
values_to = "CumulativeReturn"
) %>%
ggplot(aes(Date, CumulativeReturn, color = Strategy)) +
geom_line() +
scale_color_viridis_d("Strategy",
labels = c("alpha-based", "alpha-Delta"),
option = "D"
) +
theme_minimal() +
theme(legend.position = "bottom", legend.title = element_blank()) +
labs(
x     = "Date",
y     = "Cumulative Return"
) +
geom_vline(xintercept = as.Date("2008-11-15"),
linetype   = "dotted", color = "red") +
geom_vline(xintercept = as.Date("2020-03-11"),
linetype   = "dotted", color = "red") +
annotate("text", x = as.Date("2008-11-15"), y = -.1, label = "Great Recession",
angle=90, vjust=-.5, size=4, alpha=0.6) +
annotate("text", x = as.Date("2020-03-11"), y = -.1, label = "Pandemic Announced",
angle=90, vjust=-.5, size=4, alpha=0.6)
ggplot(portfolio_combined, aes(x = Date, y = CumulativeReturn, color = Strategy)) +
geom_line(alpha = 0.8) +
theme_minimal() +
labs(x = "Date",
y = "Cumulative Return"
) +
theme(legend.position = "bottom", legend.title = element_blank()) +
scale_color_viridis_d(option = "D")
# Implementing the alpha strategy on the smoothed data
alpha_sma_long <- alpha_sma %>%
pivot_longer(-Date, names_to = "Currency", values_to = "Alpha") %>%
mutate(Alpha = as.numeric(Alpha),
Deviation = abs(Alpha - 0.5),                    # how asymmetric
Direction = ifelse(Alpha > 0.5, "Long", "Short") # investment direction
) %>%
group_by(Date) %>%
mutate(
RawWeight = ifelse(Direction == "Long", Deviation, -Deviation),
SumAbs = sum(abs(RawWeight), na.rm = TRUE),
Weight.a = ifelse(SumAbs > 0, RawWeight / SumAbs, 0)
) %>%
mutate(
n_pos = sum(Delta >  0, na.rm=TRUE),
n_neg = sum(Delta <  0, na.rm=TRUE),
Weight.d = case_when(
Delta >  0 ~  1 / n_pos,
Delta <  0 ~ -1 / n_neg,
TRUE       ~  0
)
) %>%
ungroup()
alpha_sma
alpha_ewma_long
alpha_ewma_long %>%
filter(!is.na(Alpha))
alpha_ewma_long %>%
filter(!is.na(Alpha)) %>%
dplyr::select(Date, Currency, Alpha) %>%
crossing(eps = eps_seq)
eps_seq <- seq(-1,1,length.out = 500)
alpha_ewma_long %>%
filter(!is.na(Alpha)) %>%
dplyr::select(Date, Currency, Alpha) %>%
crossing(eps = eps_seq)
alpha_ewma_long %>%
filter(!is.na(Alpha)) %>%
dplyr::select(Date, Currency, Alpha) %>%
crossing(eps = eps_seq) %>%
mutate(Loss = quad-quad_loss(eps, Alpha))
alpha_ewma_long %>%
filter(!is.na(Alpha)) %>%
dplyr::select(Date, Currency, Alpha) %>%
crossing(eps = eps_seq) %>%
mutate(Loss = quad_quad_loss(eps, Alpha))
animate_alphas <- alpha_ewma_long %>%
filter(!is.na(Alpha)) %>%
dplyr::select(Date, Currency, Alpha) %>%
crossing(eps = eps_seq) %>%
mutate(Loss = quad_quad_loss(eps, Alpha))
anim <- ggplot(animate_alphas, aes(x = eps, y = Loss, color = Currency)) +
geom_line() +
facet_wrap(~Currency) +
scale_color_viridis_d(option = "D") +
transition_time(Date) +
ease_aes("linear")
animate(anim)
animate(anim, renderer = gifski_renderer("loss_animation.gif"))
install.packages("gifski")
animate(anim, renderer = gifski_renderer("loss_animation.gif"))
anim <- ggplot(animate_alphas, aes(x = eps, y = Loss, color = Currency)) +
geom_line() +
facet_wrap(~Currency) +
scale_color_viridis_d(option = "D") +
labs(
title = "Dynamic Asymmetric Loss Functions",
subtitle = "Date: {frame_time}",
x = "Error",
y = "L(Error)"
) +
theme_minimal() +
transition_time(Date) +
ease_aes("linear")
ggplot(animate_alphas, aes(x = eps, y = Loss, color = Currency)) +
geom_line() +
facet_wrap(~Currency) +
scale_color_viridis_d(option = "D") +
labs(
title = "Dynamic Asymmetric Loss Functions",
subtitle = "Date: {frame_time}",
x = "Error",
y = "L(Error)"
) +
theme_minimal() +
transition_time(Date) +
ease_aes("linear")
anim <- ggplot(animate_alphas, aes(x = eps, y = Loss, color = Currency)) +
geom_line() +
facet_wrap(~Currency) +
scale_color_viridis_d(option = "D") +
labs(
title = "Dynamic Asymmetric Loss Functions",
subtitle = "Date: {frame_time}",
x = "Error",
y = "L(Error)"
) +
theme_minimal() +
transition_time(Date) +
ease_aes("linear")
animate(anim, nframes = 200, fps = 10, renderer = gifski_renderer("loss_animation.gif"))
ggplot(lmresults_df, aes(x = Currency, y = Slope)) +
geom_point() +
geom_errorbar(aes(ymin = Slope - 1.96 * SE.Slope,
ymax = Slope + 1.96 * SE.Slope),
width = 0.1) +
geom_hline(yintercept = 1, linetype = "dashed", color = "grey") +
labs(title =
x = "Currency", y = "Slope Coefficient") +
ggplot(lmresults_df, aes(x = Currency, y = Slope)) +
geom_point() +
geom_errorbar(aes(ymin = Slope - 1.96 * SE.Slope,
ymax = Slope + 1.96 * SE.Slope),
width = 0.1) +
geom_hline(yintercept = 1, linetype = "dashed", color = "grey") +
labs(x = "Currency",
y = "Slope Coefficient") +
theme_minimal()
bench %>%
pivot_longer(
cols      = ends_with("_CumulativeReturn"),
names_to  = "Strategy",
values_to = "CumulativeReturn"
) %>%
ggplot(aes(YearMonth, CumulativeReturn, color = Strategy)) +
geom_line() +
theme_minimal() +
scale_colour_viridis_d(
option = "D",              # or "A", "B", "C", etc
begin  = 0.1,              # tweak start      [0,1]
end    = 0.9,              # tweak end        [0,1]
labels = c(
"Alpha-Based (EWMA)",
"Forward Signal",
"1/N",
"Alpha-Based (orig)",
"Alpha-Based (SMA)"
)) +
labs(title = "Benchmark Strategies Cumulative Returns",
x = "Date",
y = "Cumulative Return") +
theme(legend.position = "bottom", legend.title = element_blank()) +
annotate(geom = "text",
x = as.POSIXct("2020-03-11"),
# position the label text
y = -.04, label = "Pandemic declared",
fontface = "plain", angle = 90,
alpha = 0.5, vjust = 1.5) +
annotate(geom = "text",
x = as.POSIXct("2008-11-15"),
# position the label text
y = -.04, label = "Great Recession",
fontface = "plain", angle = 90,
alpha = 0.5, vjust = 1.5) +
geom_vline(xintercept = as.POSIXct("2020-03-11"),
color = "darkgrey", lty = "dotted") +
geom_vline(xintercept = as.POSIXct("2008-11-15"),
color = "darkgrey", lty = "dotted")
## plotting returns
ggplot(a_portfolio, aes(x = Date)) +
geom_line(aes(y = EWMA_CumulativeReturn, color = "EWMA")) +
geom_line(aes(y = SMA_CumulativeReturn, color = "SMA")) +
geom_line(aes(y = Original_CumulativeReturn, color = "No Smoothing")) +
labs(x = "Date",
y = "Cumulative Return") +
theme_minimal() +
theme(legend.position = "bottom", legend.title = element_blank()) +
annotate(geom = "text",
x = as.Date("2020-03-11"),
# position the label text
y = -.04, label = "Pandemic declared",
fontface = "plain", angle = 90,
alpha = 0.6, vjust = 1.5) +
annotate(geom = "text",
x = as.Date("2008-11-15"),
# position the label text
y = -.04, label = "Great Recession",
fontface = "plain", angle = 90,
alpha = 0.6, vjust = 1.5) +
geom_vline(xintercept = as.Date("2020-03-11"),
color = "red", lty = "dotted") +
geom_vline(xintercept = as.Date("2008-11-15"),
color = "red", lty = "dotted") +
scale_colour_viridis_d("Currency", option = "D")
a_ewma_portfolios %>%
pivot_longer(
cols      = c(Cume_a, Cume_d),
names_to  = "Strategy",
values_to = "CumulativeReturn"
) %>%
ggplot(aes(Date, CumulativeReturn, color = Strategy)) +
geom_line() +
scale_color_viridis_d("Strategy",
labels = c("alpha-based", "alpha-Delta"),
option = "D",
discrete = T
) +
theme_minimal() +
theme(legend.position = "bottom", legend.title = element_blank()) +
labs(
x     = "Date",
y     = "Cumulative Return"
) +
geom_vline(xintercept = as.Date("2008-11-15"),
linetype   = "dotted", color = "red") +
geom_vline(xintercept = as.Date("2020-03-11"),
linetype   = "dotted", color = "red") +
annotate("text", x = as.Date("2008-11-15"), y = -.1, label = "Great Recession",
angle=90, vjust=-.5, size=4, alpha=0.6) +
annotate("text", x = as.Date("2020-03-11"), y = -.1, label = "Pandemic Announced",
angle=90, vjust=-.5, size=4, alpha=0.6)
a_ewma_portfolios %>%
pivot_longer(
cols      = c(Cume_a, Cume_d),
names_to  = "Strategy",
values_to = "CumulativeReturn"
) %>%
ggplot(aes(Date, CumulativeReturn, color = Strategy)) +
geom_line() +
scale_color_viridis_d("Strategy",
labels = c("alpha-based", "alpha-Delta"),
option = "magma"
) +
theme_minimal() +
theme(legend.position = "bottom", legend.title = element_blank()) +
labs(
x     = "Date",
y     = "Cumulative Return"
) +
geom_vline(xintercept = as.Date("2008-11-15"),
linetype   = "dotted", color = "red") +
geom_vline(xintercept = as.Date("2020-03-11"),
linetype   = "dotted", color = "red") +
annotate("text", x = as.Date("2008-11-15"), y = -.1, label = "Great Recession",
angle=90, vjust=-.5, size=4, alpha=0.6) +
annotate("text", x = as.Date("2020-03-11"), y = -.1, label = "Pandemic Announced",
angle=90, vjust=-.5, size=4, alpha=0.6)
a_ewma_portfolios %>%
pivot_longer(
cols      = c(Cume_a, Cume_d),
names_to  = "Strategy",
values_to = "CumulativeReturn"
) %>%
ggplot(aes(Date, CumulativeReturn, color = Strategy)) +
geom_line() +
scale_color_viridis_d("Strategy",
labels = c("alpha-based", "alpha-Delta"),
option = "C"
) +
theme_minimal() +
theme(legend.position = "bottom", legend.title = element_blank()) +
labs(
x     = "Date",
y     = "Cumulative Return"
) +
geom_vline(xintercept = as.Date("2008-11-15"),
linetype   = "dotted", color = "red") +
geom_vline(xintercept = as.Date("2020-03-11"),
linetype   = "dotted", color = "red") +
annotate("text", x = as.Date("2008-11-15"), y = -.1, label = "Great Recession",
angle=90, vjust=-.5, size=4, alpha=0.6) +
annotate("text", x = as.Date("2020-03-11"), y = -.1, label = "Pandemic Announced",
angle=90, vjust=-.5, size=4, alpha=0.6)
a_ewma_portfolios %>%
pivot_longer(
cols      = c(Cume_a, Cume_d),
names_to  = "Strategy",
values_to = "CumulativeReturn"
) %>%
ggplot(aes(Date, CumulativeReturn, color = Strategy)) +
geom_line() +
scale_color_viridis_d("Strategy",
labels = c("alpha-based", "alpha-Delta"),
option = "A"
) +
theme_minimal() +
theme(legend.position = "bottom", legend.title = element_blank()) +
labs(
x     = "Date",
y     = "Cumulative Return"
) +
geom_vline(xintercept = as.Date("2008-11-15"),
linetype   = "dotted", color = "red") +
geom_vline(xintercept = as.Date("2020-03-11"),
linetype   = "dotted", color = "red") +
annotate("text", x = as.Date("2008-11-15"), y = -.1, label = "Great Recession",
angle=90, vjust=-.5, size=4, alpha=0.6) +
annotate("text", x = as.Date("2020-03-11"), y = -.1, label = "Pandemic Announced",
angle=90, vjust=-.5, size=4, alpha=0.6)
a_ewma_portfolios %>%
pivot_longer(
cols      = c(Cume_a, Cume_d),
names_to  = "Strategy",
values_to = "CumulativeReturn"
) %>%
ggplot(aes(Date, CumulativeReturn, color = Strategy)) +
geom_line() +
scale_color_viridis_d("Strategy",
labels = c("alpha-based", "alpha-Delta"),
option = "B"
) +
theme_minimal() +
theme(legend.position = "bottom", legend.title = element_blank()) +
labs(
x     = "Date",
y     = "Cumulative Return"
) +
geom_vline(xintercept = as.Date("2008-11-15"),
linetype   = "dotted", color = "red") +
geom_vline(xintercept = as.Date("2020-03-11"),
linetype   = "dotted", color = "red") +
annotate("text", x = as.Date("2008-11-15"), y = -.1, label = "Great Recession",
angle=90, vjust=-.5, size=4, alpha=0.6) +
annotate("text", x = as.Date("2020-03-11"), y = -.1, label = "Pandemic Announced",
angle=90, vjust=-.5, size=4, alpha=0.6)
a_ewma_portfolios %>%
pivot_longer(
cols      = c(Cume_a, Cume_d),
names_to  = "Strategy",
values_to = "CumulativeReturn"
) %>%
ggplot(aes(Date, CumulativeReturn, color = Strategy)) +
geom_line() +
scale_color_viridis_d("Strategy",
labels = c("alpha-based", "alpha-Delta"),
option = "C"
) +
theme_minimal() +
theme(legend.position = "bottom", legend.title = element_blank()) +
labs(
x     = "Date",
y     = "Cumulative Return"
) +
geom_vline(xintercept = as.Date("2008-11-15"),
linetype   = "dotted", color = "red") +
geom_vline(xintercept = as.Date("2020-03-11"),
linetype   = "dotted", color = "red") +
annotate("text", x = as.Date("2008-11-15"), y = -.1, label = "Great Recession",
angle=90, vjust=-.5, size=4, alpha=0.6) +
annotate("text", x = as.Date("2020-03-11"), y = -.1, label = "Pandemic Announced",
angle=90, vjust=-.5, size=4, alpha=0.6)
a_ewma_portfolios %>%
pivot_longer(
cols      = c(Cume_a, Cume_d),
names_to  = "Strategy",
values_to = "CumulativeReturn"
) %>%
ggplot(aes(Date, CumulativeReturn, color = Strategy)) +
geom_line() +
scale_color_viridis_d("Strategy",
labels = c("alpha-based", "alpha-Delta"),
option = "E"
) +
theme_minimal() +
theme(legend.position = "bottom", legend.title = element_blank()) +
labs(
x     = "Date",
y     = "Cumulative Return"
) +
geom_vline(xintercept = as.Date("2008-11-15"),
linetype   = "dotted", color = "red") +
geom_vline(xintercept = as.Date("2020-03-11"),
linetype   = "dotted", color = "red") +
annotate("text", x = as.Date("2008-11-15"), y = -.1, label = "Great Recession",
angle=90, vjust=-.5, size=4, alpha=0.6) +
annotate("text", x = as.Date("2020-03-11"), y = -.1, label = "Pandemic Announced",
angle=90, vjust=-.5, size=4, alpha=0.6)
a_ewma_portfolios %>%
pivot_longer(
cols      = c(Cume_a, Cume_d),
names_to  = "Strategy",
values_to = "CumulativeReturn"
) %>%
ggplot(aes(Date, CumulativeReturn, color = Strategy)) +
geom_line() +
scale_color_viridis_d("Strategy",
labels = c("alpha-based", "alpha-Delta"),
option = "H"
) +
theme_minimal() +
theme(legend.position = "bottom", legend.title = element_blank()) +
labs(
x     = "Date",
y     = "Cumulative Return"
) +
geom_vline(xintercept = as.Date("2008-11-15"),
linetype   = "dotted", color = "red") +
geom_vline(xintercept = as.Date("2020-03-11"),
linetype   = "dotted", color = "red") +
annotate("text", x = as.Date("2008-11-15"), y = -.1, label = "Great Recession",
angle=90, vjust=-.5, size=4, alpha=0.6) +
annotate("text", x = as.Date("2020-03-11"), y = -.1, label = "Pandemic Announced",
angle=90, vjust=-.5, size=4, alpha=0.6)
# Plot
ggplot(combined_cume, aes(x = Date, y = CumulativeReturn, color = Source, linetype = Strategy)) +
geom_line() +
theme_minimal() +
labs(x = "Date",
y = "Cumulative Return") +
scale_color_viridis_d(option = "H") +
theme(legend.position = "bottom", legend.title = element_blank(), legend.spacing.x = unit(2, "cm"))
# Plot
ggplot(combined_cume, aes(x = Date, y = CumulativeReturn, color = Source, linetype = Strategy)) +
geom_line() +
theme_minimal() +
labs(x = "Date",
y = "Cumulative Return") +
scale_color_viridis_d(option = "C") +
theme(legend.position = "bottom", legend.title = element_blank(), legend.spacing.x = unit(2, "cm"))
# Plot
ggplot(combined_cume, aes(x = Date, y = CumulativeReturn, color = Source, linetype = Strategy)) +
geom_line() +
theme_minimal() +
labs(x = "Date",
y = "Cumulative Return") +
scale_color_viridis_d(option = "E") +
theme(legend.position = "bottom", legend.title = element_blank(), legend.spacing.x = unit(2, "cm"))
# Plot
ggplot(combined_cume, aes(x = Date, y = CumulativeReturn, color = Source, linetype = Strategy)) +
geom_line() +
theme_minimal() +
labs(x = "Date",
y = "Cumulative Return") +
#scale_color_viridis_d(option = "E") +
theme(legend.position = "bottom", legend.title = element_blank(), legend.spacing.x = unit(2, "cm"))
anim <- ggplot(animate_alphas, aes(x = eps, y = Loss, color = Currency)) +
geom_line() +
labs(
title = "Dynamic Asymmetric Loss Functions",
subtitle = "Date: {frame_time}",
x = "Error",
y = "L(Error)"
) +
theme_minimal() +
transition_time(Date) +
ease_aes("linear")
animate(anim, nframes = 200, fps = 10, renderer = gifski_renderer("loss_animation.gif"))
anim <- ggplot(animate_alphas, aes(x = eps, y = Loss, color = Currency)) +
geom_line() +
labs(
title = "Dynamic Asymmetric Loss Functions",
subtitle = "Date: {frame_time}",
x = "Error",
y = "L(Error)"
) +
theme_minimal() +
theme(legend.position = "bottom") +
transition_time(Date) +
ease_aes("linear")
animate(anim, nframes = 200, fps = 10, renderer = gifski_renderer("loss_animation.gif"))
git add .
lmresults_df
